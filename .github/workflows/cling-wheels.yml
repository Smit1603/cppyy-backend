name: Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on: [push, pull_request]
# Alternatively, to publish when a (published) GitHub Release is created, use the following:
# on:
#   push:
#   pull_request:
#   release:
#     types:
#       - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    env:
      CIBW_BUILD: "${{ matrix.cibw.build || '*' }}"
      CIBW_SKIP: "${{ matrix.cibw.skip || '' }}"
      CIBW_ARCHS_LINUX: "${{ matrix.cibw.arch || 'auto' }}"
      CIBW_ARCHS_MACOS: "${{ matrix.cibw.arch || 'auto' }}"
      CIBW_MANYLINUX_X86_64_IMAGE: "${{ matrix.cibw.manylinux_x86_64_image || '' }}"

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-11
            name: mac-cpython
            cibw:
              build: "cp38-*"

          - os: macos-11
            name: mac-cpython-arm
            cibw:
              arch: arm64
              build: "cp38-*"

          - os: macos-11
            name: mac-pypy
            cibw:
              build: "pp37-*"

          - os: macos-11
            name: mac-pypy-arm
            cibw:
              arch: arm64
              build: "pp37-*"

          - os: ubuntu-20.04
            name: manylinux-x86_64
            cibw:
              arch: x86_64
              build: "cp38-manylinux*"

          - os: ubuntu-20.04
            name: manylinux-arch64
            cibw:
              arch: aarch64
              build: "cp38-manylinux*"

          - os: ubuntu-20.04
            name: manylinux-i686
            cibw:
              arch: i686
              build: "cp38-manylinux*"

          - os: ubuntu-20.04
            name: musllinux-x86_64
            cibw:
              arch: x86_64
              build: "cp38-musllinux*"

          - os: ubuntu-20.04
            name: musllinux-i686
            cibw:
              arch: i686
              build: "cp38-musllinux*"

          - os: windows-2019-x86
            name: win32
            architecture: x86
            cibw:
              build: "cp38-win32"

          - os: windows-2019-amd64
            name: win_amd64
            architecture: x64
            cibw:
              build: "cp38-win_amd64"

          - os: windows-2019-arm64
            name: win32-arm64
            architecture: x64
            cibw:
              build: "cp38-win_arm64"

     
    steps:
      - uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
          architecture: ${{ matrix.architecture }}


      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.12.0

      - name: Build wheels
        run: cd cling && python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./cling/wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build sdist
        run: cd cling && pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: ./cling/dist/*.tar.gz
